package com.fld.init.aop;import org.aspectj.lang.ProceedingJoinPoint;import org.aspectj.lang.annotation.Around;import org.aspectj.lang.annotation.Aspect;import org.springframework.stereotype.Component;import com.fld.framework.dto.api.ApiReq;import com.fld.framework.dto.api.ApiReqContent;import com.fld.framework.dto.api.ApiResp;import com.fld.framework.util.JacksonUtils;import com.fld.init.framework.runtime.FullPathHolder;import com.fld.init.framework.util.LogUtils;/** * Biz参数整合 *  * @author * */@Aspect@Componentpublic class HttpParamAdvice {  @Around("execution (* com.fld.init.http..*.*(..))")  public Object transmitParams(ProceedingJoinPoint jp) throws Throwable {    String reqStr = "[HTTP][" + jp.getSignature().getDeclaringType().getSimpleName() + "."        + jp.getSignature().getName() + "]";    // 检查参数    try {      StringBuffer argsStr = new StringBuffer("[");      ApiReqContent ar = null;      Object[] args = jp.getArgs();      if (null != args && args.length > 0) {        for (Object object : args) {          if (object instanceof ApiReq) {            ar = ((ApiReq) object).getApiReqContent();            if (null == ar.getHeader()) {              ar.setHeader(FullPathHolder.getHeader());            }            if (null == ar.getDevice()) {              ar.setDevice(FullPathHolder.getDevice());            }            if (null == ar.getProxy()) {              ar.setProxy(FullPathHolder.getProxy());            }            // 加解密没有          }          argsStr.append(JacksonUtils.toJson(object));          argsStr.append(",");        }        argsStr.deleteCharAt(argsStr.length() - 1);      }      argsStr.append("]");      reqStr = reqStr + "[http Args]" + argsStr;      Object resp = null;      // http 异常      Throwable e = null;      // 检查通过后执行      try {        resp = jp.proceed();      } catch (Throwable e2) {        e = e2;      }      if (null != resp && resp instanceof ApiResp) {        ApiResp arr = (ApiResp) resp;        arr.setTimestamp(System.currentTimeMillis());        if (null != ar && null != ar.getHeader()) {          arr.setState(ar.getHeader().getState());        }        // 加解密没有        // if (arr.getEncrypt()) {}      }      LogUtils.serviceApiLog(reqStr + "[http result]" + JacksonUtils.toJson(resp)          + (null == e ? "" : ("[http throwable]" + e.toString())));      // http 异常 抛出      if (null != e) {        throw e;      }      return resp;    } catch (Throwable e1) {      LogUtils.error("HttpParamAdvice", e1);      throw e1;    }  }}